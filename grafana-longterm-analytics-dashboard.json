{
  "dashboard": {
    "title": "GPU Long-Term Analytics & Distributions",
    "tags": ["gpu", "analytics", "distributions"],
    "timezone": "browser",
    "schemaVersion": 36,
    "version": 1,
    "refresh": "5m",
    "time": {
      "from": "2025-10-12T00:00:00.000Z",
      "to": "2025-10-17T23:59:59.000Z"
    },
    "panels": [
      {
        "id": 1,
        "title": "GPU Temperature Distribution (Histogram)",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 0, "y": 0},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_temperature\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 1,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "celsius",
            "color": {
              "mode": "thresholds"
            },
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"value": null, "color": "green"},
                {"value": 60, "color": "yellow"},
                {"value": 80, "color": "red"}
              ]
            }
          }
        },
        "description": "Distribution of GPU temperature readings across the selected time range"
      },
      {
        "id": 2,
        "title": "GPU Load Distribution (Histogram)",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 12, "y": 0},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_load\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 5,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "color": {
              "mode": "thresholds"
            },
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"value": null, "color": "green"},
                {"value": 50, "color": "yellow"},
                {"value": 80, "color": "red"}
              ]
            }
          }
        },
        "description": "Distribution showing how often GPU operates at different load levels"
      },
      {
        "id": 3,
        "title": "Temperature Statistics",
        "type": "stat",
        "gridPos": {"h": 8, "w": 6, "x": 0, "y": 10},
        "targets": [
          {
            "refId": "Min",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_temperature\")\n  |> min()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Min\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Avg",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_temperature\")\n  |> mean()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Avg\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Max",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_temperature\")\n  |> max()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Max\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "celsius",
            "decimals": 1
          }
        },
        "options": {
          "orientation": "vertical",
          "textMode": "value_and_name",
          "colorMode": "background"
        },
        "description": "Min, Average, and Max GPU temperature"
      },
      {
        "id": 4,
        "title": "GPU Load Statistics",
        "type": "stat",
        "gridPos": {"h": 8, "w": 6, "x": 6, "y": 10},
        "targets": [
          {
            "refId": "Min",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_load\")\n  |> min()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Min\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Avg",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_load\")\n  |> mean()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Avg\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Max",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_load\")\n  |> max()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Max\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "decimals": 1
          }
        },
        "options": {
          "orientation": "vertical",
          "textMode": "value_and_name",
          "colorMode": "background"
        },
        "description": "Min, Average, and Max GPU load"
      },
      {
        "id": 5,
        "title": "Power Draw Statistics",
        "type": "stat",
        "gridPos": {"h": 8, "w": 6, "x": 12, "y": 10},
        "targets": [
          {
            "refId": "Min",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"board_power_draw\")\n  |> min()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Min\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Avg",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"board_power_draw\")\n  |> mean()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Avg\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Max",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"board_power_draw\")\n  |> max()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Max\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "watt",
            "decimals": 1
          }
        },
        "options": {
          "orientation": "vertical",
          "textMode": "value_and_name",
          "colorMode": "background"
        },
        "description": "Min, Average, and Max power consumption"
      },
      {
        "id": 6,
        "title": "Memory Usage Statistics",
        "type": "stat",
        "gridPos": {"h": 8, "w": 6, "x": 18, "y": 10},
        "targets": [
          {
            "refId": "Min",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_used\")\n  |> min()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Min\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Avg",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_used\")\n  |> mean()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Avg\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          },
          {
            "refId": "Max",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_used\")\n  |> max()\n  |> map(fn: (r) => ({r with _value: r._value, stat: \"Max\"}))",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "decmbytes",
            "decimals": 0
          }
        },
        "options": {
          "orientation": "vertical",
          "textMode": "value_and_name",
          "colorMode": "background"
        },
        "description": "Min, Average, and Max memory usage"
      },
      {
        "id": 7,
        "title": "Power Draw Distribution (Histogram)",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 0, "y": 18},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"board_power_draw\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 10,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "watt",
            "color": {
              "mode": "palette-classic"
            }
          }
        },
        "description": "Distribution of power consumption across the time range"
      },
      {
        "id": 8,
        "title": "Memory Usage Distribution (Histogram)",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 12, "y": 18},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"memory_used\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 200,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "decmbytes",
            "color": {
              "mode": "palette-classic"
            }
          }
        },
        "description": "Distribution of memory usage patterns"
      },
      {
        "id": 9,
        "title": "Temperature Over Time (Daily Average)",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 28},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_temperature\")\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "celsius",
            "custom": {
              "lineInterpolation": "smooth",
              "fillOpacity": 10
            },
            "color": {
              "mode": "palette-classic"
            }
          }
        },
        "description": "Hourly average temperature trend"
      },
      {
        "id": 10,
        "title": "GPU Load Over Time (Hourly Average)",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 28},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_load\")\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "min": 0,
            "max": 100,
            "custom": {
              "lineInterpolation": "smooth",
              "fillOpacity": 20
            },
            "color": {
              "mode": "palette-classic"
            }
          }
        },
        "description": "Hourly average GPU load trend"
      },
      {
        "id": 11,
        "title": "Hot Spot Temperature Distribution",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 0, "y": 36},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"hot_spot\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 1,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "celsius",
            "color": {
              "mode": "thresholds"
            },
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {"value": null, "color": "green"},
                {"value": 70, "color": "yellow"},
                {"value": 90, "color": "red"}
              ]
            }
          }
        },
        "description": "Distribution of GPU hot spot temperatures"
      },
      {
        "id": 12,
        "title": "Clock Speed Distribution",
        "type": "histogram",
        "gridPos": {"h": 10, "w": 12, "x": 12, "y": 36},
        "targets": [
          {
            "refId": "A",
            "query": "from(bucket: \"gpu-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpu_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"gpu_clock\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_value\", \"_time\"])",
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            }
          }
        ],
        "options": {
          "bucketSize": 50,
          "legend": {
            "displayMode": "list",
            "placement": "bottom"
          }
        },
        "fieldConfig": {
          "defaults": {
            "unit": "hertz",
            "color": {
              "mode": "palette-classic"
            }
          }
        },
        "description": "Distribution of GPU clock speeds (MHz)"
      }
    ]
  },
  "overwrite": true
}
